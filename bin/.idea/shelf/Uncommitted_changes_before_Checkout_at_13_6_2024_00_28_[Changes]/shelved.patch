Index: src/main/java/net/bmmv/parking/repository/RepositoryRecarga.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.bmmv.parking.repository;\r\n\r\npublic interface RepositoryRecarga {\r\n}\r\n
===================================================================
diff --git a/src/main/java/net/bmmv/parking/repository/RepositoryRecarga.java b/src/main/java/net/bmmv/parking/repository/RepositoryRecarga.java
--- a/src/main/java/net/bmmv/parking/repository/RepositoryRecarga.java	
+++ b/src/main/java/net/bmmv/parking/repository/RepositoryRecarga.java	
@@ -1,4 +1,17 @@
 package net.bmmv.parking.repository;
 
-public interface RepositoryRecarga {
+import net.bmmv.parking.model.Recarga;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface RepositoryRecarga extends JpaRepository<Recarga, Long> {
+
+    List<Recarga> findRecargabyCUIT(Long CUIT);
+
+    List<Recarga> findRecargaBydni(Long dni);
+
+    List<Recarga> findRecargaByPatente(String patente);
 }
Index: src/main/java/net/bmmv/parking/service/IServiceRecarga.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.bmmv.parking.service;\r\n\r\npublic interface IServiceRecarga {\r\n}\r\n
===================================================================
diff --git a/src/main/java/net/bmmv/parking/service/IServiceRecarga.java b/src/main/java/net/bmmv/parking/service/IServiceRecarga.java
--- a/src/main/java/net/bmmv/parking/service/IServiceRecarga.java	
+++ b/src/main/java/net/bmmv/parking/service/IServiceRecarga.java	
@@ -1,4 +1,20 @@
 package net.bmmv.parking.service;
 
+import net.bmmv.parking.model.Recarga;
+
+import java.util.List;
+
 public interface IServiceRecarga {
+    public List<Recarga> listarRecargas();
+
+    public List<Recarga> buscarRecargaPorPatente(String patente);
+
+    public List<Recarga> buscarRecargaPorDNI(Long dni);
+
+    public List<Recarga> buscarRecargaPorCUIT(Long CUIT);
+
+    public  Recarga guardarRecarga(Recarga Recarga);
+
+    //  ---   no uso m√©todo eliminar - no es requerido por el apartado ---
+    //  public void eliminarRecarga(Recarga recarga);
 }
Index: src/main/java/net/bmmv/parking/service/ServiceRecarga.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.bmmv.parking.service;\r\n\r\npublic class ServiceRecarga {\r\n}\r\n
===================================================================
diff --git a/src/main/java/net/bmmv/parking/service/ServiceRecarga.java b/src/main/java/net/bmmv/parking/service/ServiceRecarga.java
--- a/src/main/java/net/bmmv/parking/service/ServiceRecarga.java	
+++ b/src/main/java/net/bmmv/parking/service/ServiceRecarga.java	
@@ -1,4 +1,41 @@
 package net.bmmv.parking.service;
 
-public class ServiceRecarga {
+import net.bmmv.parking.model.Recarga;
+import net.bmmv.parking.repository.RepositoryRecarga;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+@Service
+public class ServiceRecarga implements IServiceRecarga {
+
+    @Autowired
+    private RepositoryRecarga repoRecarga;
+
+    @Override
+    public List<Recarga> listarRecargas() {
+        return (List<Recarga>) repoRecarga.findAll();
+    }
+
+    @Override
+    public List<Recarga> buscarRecargaPorPatente(String patente) {
+        return repoRecarga.findRecargaByPatente(patente);
+    }
+
+    @Override
+    public List<Recarga> buscarRecargaPorDNI(Long dni) {
+        return repoRecarga.findRecargaBydni(dni);
+    }
+
+    @Override
+    public List<Recarga> buscarRecargaPorCUIT(Long CUIT) {
+        return repoRecarga.findRecargabyCUIT(CUIT);
+    }
+
+
+    @Override
+    public Recarga guardarRecarga(Recarga Recarga) {
+        return repoRecarga.save(Recarga);
+    }
 }
